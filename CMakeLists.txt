# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(ImGuiApp)

# Packages
find_package(OpenGL REQUIRED)

# Subdirectory: thirdparty
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/thirdparty")
else()
	set(CMAKE_FOLDER thirdparty)
endif()
add_subdirectory(thirdparty)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target: ImGuiApp
set(ImGuiApp_SOURCES
	"src/ImGuiApp/app.cpp"
	"src/ImGuiApp/window.cpp"
	"src/ImGuiApp/window.internal.hpp"
	"include/ImGuiApp/app.hpp"
	"include/ImGuiApp/window.hpp"
	cmake.toml
)

add_library(ImGuiApp STATIC)

target_sources(ImGuiApp PRIVATE ${ImGuiApp_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${ImGuiApp_SOURCES})

add_library(ImGuiApp::ImGuiApp ALIAS ImGuiApp)
target_compile_features(ImGuiApp PUBLIC
	cxx_std_17
)

target_include_directories(ImGuiApp PUBLIC
	include
)

target_include_directories(ImGuiApp PRIVATE
	src
)

target_link_libraries(ImGuiApp PUBLIC
	imgui
)

target_link_libraries(ImGuiApp PRIVATE
	SDL2::SDL2
	OpenGL::GL
	rapidxml::rapidxml
)

# Target: ImGuiApp_Demo
set(ImGuiApp_Demo_SOURCES
	"demo/main.cpp"
	cmake.toml
)

add_executable(ImGuiApp_Demo)

target_sources(ImGuiApp_Demo PRIVATE ${ImGuiApp_Demo_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${ImGuiApp_Demo_SOURCES})

target_compile_features(ImGuiApp_Demo PRIVATE
	cxx_std_17
)

target_link_libraries(ImGuiApp_Demo PRIVATE
	ImGuiApp::ImGuiApp
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ImGuiApp_Demo)
endif()

